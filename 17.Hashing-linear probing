#include <stdio.h>

#define SIZE 10

int hashTable[SIZE];

void initializeHashTable() {
    for (int i = 0; i < SIZE; i++) {
        hashTable[i] = -1;  
    }
}

int hashFunction(int key) {
    return key % SIZE; 
}

void insert(int key) {
    int hashValue = hashFunction(key);

   
    while (hashTable[hashValue] != -1 && hashTable[hashValue] != key) {
        hashValue = (hashValue + 1) % SIZE;
    }

    if (hashTable[hashValue] == -1) {
        hashTable[hashValue] = key;  // Insert key into the empty slot
    } else {
        printf("Key %d already exists in the hash table.\n", key);
    }
}

void displayHashTable() {
    printf("Hash Table: ");
    for (int i = 0; i < SIZE; i++) {
        if (hashTable[i] != -1) {
            printf("%d ", hashTable[i]);
        } else {
            printf("_ ");  
        }
    }
    printf("\n");
}

int main() {
    int opt, key;

    initializeHashTable();

    do {
        printf("\n** Main Menu **\n");
        printf("1. Insert\n");
        printf("2. Display Hash Table\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &opt);

        switch (opt) {
            case 1:
                printf("Enter the key to be inserted: ");
                scanf("%d", &key);
                insert(key);
                break;
            case 2:
                displayHashTable();
                break;
            case 3:
                return 0;
            default:
                printf("Please enter a valid option.\n");
        }
    } while (1);

    return 0;
}

